@model IEnumerable<BirthVM>

@section Header {
        Birth List
}

@section loc {
        index
}

@if (TempData["ErrorMessage"] != null)
{
    <div class="alert alert-danger">
        @TempData["ErrorMessage"]
    </div>
}

<div class="col-md-12">
    <div class="card shadow-sm">
        <div class="card-header text-center">
            <h3 class="card-title font-weight-bold">Show All Birth Records</h3>
        </div>
        <div class="card-body">
            <!-- Create Birth Button -->
            <div class="d-flex justify-content-center mb-3">
                <a asp-controller="Birth" asp-action="Create" class="btn btn-light btn-outline-primary">
                    <i class="fas fa-plus"></i> Create New Birth Record
                </a>
            </div>

            @if (Model == null || !Model.Any())
            {
                <div class="alert alert-warning text-center" role="alert">
                    No birth records available.
                </div>
            }
            else
            {
                <!-- Birth Table -->
                <table class="table table-bordered table-hover">
                    <thead class="thead-light">
                        <tr>
                            <th>Birth Date</th>
                            <th>Number of Offspring</th>
                            <th>Pregnancy</th>
                            <th>Actions</th>
                        </tr>
                    </thead>
                    <tbody>
                        @foreach (var item in Model)
                        {
                            <tr>
                                <td>@item.BirthDate.ToString("yyyy-MM-dd")</td>
                                <td>@item.NumberOfOffspring</td>
                                <td>@item.Pregnancy?.Name</td>
                                <td class="text-center">
                                    <!-- Edit Button -->
                                    <a asp-controller="Birth" asp-action="Edit" asp-route-id="@item.Id" class="btn btn-warning btn-sm">
                                        <i class="fas fa-edit"></i> Edit
                                    </a>

                                    <!-- Details Button -->
                                    <a asp-controller="Birth" asp-action="Details" asp-route-id="@item.Id" class="btn btn-info btn-sm">
                                        <i class="fas fa-info-circle"></i> Details
                                    </a>

                                    <!-- Delete Button -->
                                    <form asp-controller="Birth" asp-action="DeleteConfirmed" asp-route-id="@item.Id" method="post" class="d-inline delete-form">
                                        @Html.AntiForgeryToken()
                                        <button type="button" class="btn btn-danger btn-sm delete-btn" data-id="@item.Id">
                                            <i class="fas fa-trash-alt"></i> Delete
                                        </button>
                                    </form>
                                </td>
                            </tr>
                        }
                    </tbody>
                </table>
            }
        </div>
    </div>
</div>
@section script {
    <script>
        document.querySelectorAll(".delete-btn").forEach(button => {
            button.addEventListener("click", async () => {
                const swalWithBootstrapButtons = Swal.mixin({
                    customClass: {
                        confirmButton: "btn btn-success",
                        cancelButton: "btn btn-danger"
                    },
                    buttonsStyling: false
                });

                swalWithBootstrapButtons.fire({
                    title: "Are you sure?",
                    text: "You won't be able to revert this!",
                    icon: "warning",
                    showCancelButton: true,
                    confirmButtonText: "Yes, delete it!",
                    cancelButtonText: "No, cancel!",
                    reverseButtons: true
                }).then(async (result) => {
                    if (result.isConfirmed) {
                        const id = button.dataset.id;
                        const form = button.closest(".delete-form");
                        const csrfToken = form.querySelector("input[name='__RequestVerificationToken']").value;

                        const response = await fetch(`/Dashboard/Birth/DeleteConfirmed/${id}`, {
                            method: 'POST',
                            headers: {
                                "Content-Type": "application/json",
                                "RequestVerificationToken": csrfToken
                            }
                        });

                        if (response.ok) {
                            button.closest("tr").remove();
                            Swal.fire({
                                icon: "success",
                                title: "Deleted successfully",
                                toast: true,
                                position: "top-end",
                                showConfirmButton: false,
                                timer: 3000
                            });
                        } else {
                            Swal.fire({
                                icon: "error",
                                title: "Error",
                                text: "Failed to delete the birth record."
                            });
                        }
                    }
                });
            });
        });
    </script>
}
