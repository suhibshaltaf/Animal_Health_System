@model OwnerDetailsVM

@section Header {
    Owner
}

@section loc {
    Details
}

@{
    var successMessage = TempData["SuccessMessage"];
    var errorMessage = TempData["ErrorMessage"];
}
<form id="deleteForm">
    @Html.AntiForgeryToken()
</form>

<div class="col-md-12">
    @if (successMessage != null)
    {
        <div class="alert alert-success">@successMessage</div>
    }

    @if (errorMessage != null)
    {
        <div class="alert alert-danger">@errorMessage</div>
    }

    <div class="card shadow-sm">
        <div class="card-header">
            <h3 class="card-title">Owner Details</h3>
        </div>
        <div class="card-body">
            <!-- Full Name -->
            <div class="form-group">
                <label>Full Name</label>
                <input value="@Model.FullName" class="form-control" readonly />
            </div>

            <!-- Phone Number -->
            <div class="form-group">
                <label>Phone Number</label>
                <input value="@Model.PhoneNumber" class="form-control" readonly />
            </div>

            <!-- Email -->
            <div class="form-group">
                <label>Email</label>
                <input value="@Model.Email" class="form-control" readonly />
            </div>

            <!-- Farms -->
            <div class="form-group">
                <label>Farms</label>
                <ul>
                    @if (Model.Farms.Any())
                    {
                        <div class="row">
                            @foreach (var farm in Model.Farms)
                            {
                                <div class="col-md-4">
                            <li>Farm Name: @farm.Name</li>
                            <li>Animal Count: @farm.Animals.Count</li>
                    </div>
                            }
            </div>
                    }
                    else
                    {
            <li>No farms available</li>
                    }
        </ul>
    </div>

    <!-- Notifications -->

    <!-- Action Buttons -->
    <div class="form-group mt-4">
        <a asp-controller="Owner" asp-action="Edit" asp-route-id="@Model.Id" class="btn btn-primary">
            <i class="fas fa-edit"></i> Edit
        </a>
        <a asp-action="Index" class="btn btn-secondary">
            <i class="fas fa-arrow-left"></i> Back to Index
        </a>

        <!-- Add Delete Button -->
        <button class="btn btn-danger" id="deleteBtn">
            <i class="fas fa-trash"></i> Delete
        </button>
    </div>
</div>
    </div>
</div>

@section script {
    <script>
              document.getElementById('deleteBtn').addEventListener('click', async () => {
            const swalWithBootstrapButtons = Swal.mixin({
                customClass: {
                    confirmButton: "btn btn-success",
                    cancelButton: "btn btn-danger"
                },
                buttonsStyling: false
            });

            swalWithBootstrapButtons.fire({
                title: "Are you sure?",
                text: "You won't be able to revert this!",
                icon: "warning",
                showCancelButton: true,
                confirmButtonText: "Yes, delete it!",
                cancelButtonText: "No, cancel!",
                reverseButtons: true
            }).then(async (result) => {
                if (result.isConfirmed) {
                    const id = @Model.Id; // الحصول على ID الطبيب البيطري

                    // ✅ جلب التوكن من الفورم المخفي
                    const tokenInput = document.querySelector('input[name="__RequestVerificationToken"]');
                    const token = tokenInput ? tokenInput.value : '';

                    if (!token) {
                        Swal.fire("Error!", "Anti-forgery token is missing.", "error");
                        return;
                    }

                    // ✅ إرسال الطلب مع التوكن
                    const response = await fetch(`/Dashboard/Owner/DeleteConfirmed`, {
                        method: 'POST',
                        headers: {
                            "Content-Type": "application/x-www-form-urlencoded",
                            "RequestVerificationToken": token
                        },
                        body: new URLSearchParams({ id: id }) // إرسال ID كـ FormData
                    });

                    if (response.ok) {
                        Swal.fire("Deleted!", "The veterinarian has been deleted.", "success");
                        window.location.href = '/Dashboard/Owner/Index'; // توجيه المستخدم بعد الحذف
                    } else {
                        Swal.fire("Error!", "Unable to delete the veterinarian.", "error");
                    }
                }
            });
        });

    </script>
}
