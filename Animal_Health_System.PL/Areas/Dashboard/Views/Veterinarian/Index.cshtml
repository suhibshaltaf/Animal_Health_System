@model IEnumerable<VeterinarianVM>

@section Header {
    Veterinarians
}
@section loc {
    Index
}
@{
    var successMessage = TempData["SuccessMessage"];
    var errorMessage = TempData["ErrorMessage"];
}

<div class="col-md-10 offset-md-1">
    <div class="card shadow">
        <div class="card-header bg-primary text-white text-center">
            <h3 class="card-title">Veterinarians</h3>
        </div>
        <div class="card-body">
            @if (successMessage != null)
            {
                <div class="alert alert-success">@successMessage</div>
            }

            @if (errorMessage != null)
            {
                <div class="alert alert-danger">@errorMessage</div>
            }
            @if(User.IsInRole("Admin"))
            {  <div class="text-right mb-3">
                <a asp-controller="Veterinarian" asp-action="Create" class="btn btn-primary">Add New Veterinarian</a>
                </div>
            }
            <form id="deleteForm">
                @Html.AntiForgeryToken()
            </form>
            @if (Model != null && Model.Any())
            {
                <table class="table table-striped table-bordered">
                    <thead class="thead-light">
                        <tr>
                            <th>Full Name</th>
                            <th>Specialty</th>
                            <th>Phone Number</th>
                            <th>Email</th>
                            <th>Actions</th>
                        </tr>
                    </thead>
                    <tbody>
                        @foreach (var item in Model)    
                        {
                            <tr>
                                <td>@item.FullName</td>
                                <td>@item.Specialty</td>
                                <td>@item.PhoneNumber</td>
                                <td>@item.Email</td>
                                <td>
                                    

                                    <a asp-controller="Veterinarian" asp-action="Details" asp-route-id="@item.Id" class="btn btn-info btn-sm">Details</a>
                                    @if (User.IsInRole("Veterinarian"))
                                    {
                                    <a asp-controller="Veterinarian" asp-action="Edit" asp-route-id="@item.Id" class="btn btn-warning btn-sm">Edit</a>
                                    <a href="javascript:void(0)" data-id="@item.Id" class="btn btn-danger btn-sm delete-btn">Delete</a>}
                                </td>
                            </tr>
                        }
                    </tbody>
                </table>
            }
            else
            {
                <div class="alert alert-info">
                    No veterinarians found.
                </div>
            }
        </div>
    </div>
</div>

@section script {
    <script>
               document.querySelectorAll('.delete-btn').forEach(button => {
            button.addEventListener('click', async () => {
                const swalWithBootstrapButtons = Swal.mixin({
                    customClass: {
                        confirmButton: "btn btn-success",
                        cancelButton: "btn btn-danger"
                    },
                    buttonsStyling: false
                });

                swalWithBootstrapButtons.fire({
                    title: "Are you sure?",
                    text: "You won't be able to revert this!",
                    icon: "warning",
                    showCancelButton: true,
                    confirmButtonText: "Yes, delete it!",
                    cancelButtonText: "No, cancel!",
                    reverseButtons: true
                }).then(async (result) => {
                    if (result.isConfirmed) {
                        const id = button.dataset.id;

                        const tokenInput = document.querySelector('input[name="__RequestVerificationToken"]');
                        const token = tokenInput ? tokenInput.value : '';

                        if (!token) {
                            Swal.fire("Error!", "Anti-forgery token is missing.", "error");
                            return;
                        }

                        const response = await fetch(`/Dashboard/Veterinarian/DeleteConfirmed`, {
                            method: 'POST',
                            headers: {
                                "Content-Type": "application/x-www-form-urlencoded",
                                "RequestVerificationToken": token
                            },
                            body: new URLSearchParams({ id: id }) 
                        });

                        if (response.ok) {
                            Swal.fire("Deleted!", "The veterinarian has been deleted.", "success");
                            button.closest("tr").remove();
                        } else {
                            Swal.fire("Error!", "Unable to delete the veterinarian.", "error");
                        }
                    }
                });
            });
        });

    </script>
}
